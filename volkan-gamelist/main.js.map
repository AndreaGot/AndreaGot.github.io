{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/types/game.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'home',\r\n    component: HomeComponent,\r\n  },\r\n  // All other paths lead to home\r\n  {\r\n    path: '**',\r\n    redirectTo: 'home',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, HostBinding } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'volkan-gamelist';\r\n  toggleControl = new FormControl(false);\r\n  @HostBinding('class') className = '';\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.className = 'light-theme';\r\n\r\n    this.toggleControl.valueChanges.subscribe((darkMode) => {\r\n      const darkClassName = 'dark-theme';\r\n      const lightClassName = 'light-theme';\r\n      this.className = darkMode ? darkClassName : 'light-theme';\r\n    });\r\n  }\r\n}\r\n","<div id=\"main-container\" class=\"container mat-app-background\">\r\n  <mat-toolbar id=\"volkan-title\" color=\"primary\">\r\n    Schermata iniziale di scelta\r\n    <span class=\"fill-space\"></span>\r\n    <mat-icon>brightness_5</mat-icon>\r\n    <mat-slide-toggle [formControl]=\"toggleControl\">\r\n    </mat-slide-toggle>\r\n    <mat-icon>bedtime</mat-icon>\r\n  </mat-toolbar>\r\n  <mat-sidenav-container class=\"navbar-container\">\r\n    <mat-sidenav mode=\"side\" opened>\r\n      <!-- navigation bar -->\r\n      <mat-nav-list>\r\n        <a mat-list-item routerLink=\"/\">\r\n          <mat-icon>house</mat-icon> Home\r\n        </a>\r\n        <mat-divider></mat-divider>\r\n      </mat-nav-list>\r\n    </mat-sidenav>\r\n    <mat-sidenav-content>\r\n      <!-- main content container -->\r\n      <router-outlet></router-outlet>\r\n    </mat-sidenav-content>\r\n  </mat-sidenav-container>\r\n  <!-- <app-footer></app-footer> -->\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\n\r\n\r\n// UI\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatSidenavModule } from '@angular/material/sidenav'\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\n\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    MatToolbarModule,\r\n    MatCardModule,\r\n    MatSidenavModule,\r\n    MatSlideToggleModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    FlexLayoutModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { Observable, ObservedValueOf } from 'rxjs';\r\nimport { Game } from '../types/game';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\n\r\nexport class HomeComponent implements OnInit {\r\n\r\n  loading = false;\r\n  games: Game[] = [];\r\n\r\n\r\n  constructor(private http: HttpClient,\r\n    private sanitizer: DomSanitizer) { }\r\n  response: any;\r\n\r\n  ngOnInit(): void {\r\n    this.getGames();\r\n  }\r\n\r\n  getGameThumbnail(item: Game, obj: any) {\r\n    if (!item.bggId) {\r\n      item.thumbnail = 'https://styles.redditmedia.com/t5_2qhk5/styles/communityIcon_v58lvj23zo551.jpg?format=pjpg&s=1ff68e27037151461267326f90b701705fb5a527';\r\n      console.log('nessuna immagine');\r\n      return;\r\n    }\r\n    item.thumbnail = obj.items.item.thumbnail;\r\n  }\r\n\r\n  getGameMinPlayers(item: Game, obj: any) {\r\n    item.minPlayers = obj.items.item.minplayers.$.value\r\n  }\r\n\r\n  getGameMaxPlayers(item: Game, obj: any) {\r\n    item.maxPlayers = obj.items.item.maxplayers.$.value\r\n  }\r\n\r\n  getGameAuthor(item: Game, obj: any) {\r\n    item.maxPlayers = obj.items.item.maxplayers.$.value\r\n  }\r\n\r\n  getGameYear(item: Game, obj: any) {\r\n    item.year = obj.items.item.yearpublished.$.value\r\n  }\r\n\r\n  getPlayingTime(item: Game, obj: any) {\r\n    item.playingTime = obj.items.item.playingtime.$.value\r\n  }\r\n\r\n\r\n  async getGameData(item: Game) {\r\n    if (!item.bggId) {\r\n      this.getGameThumbnail(item, undefined);\r\n      return\r\n    }\r\n    this.getItemDataFromBgg(item.bggId).subscribe({\r\n      next: async (res) => {\r\n        const data = JSON.parse(res);\r\n        this.getGameThumbnail(item, data);\r\n        this.getGameMaxPlayers(item, data);\r\n        this.getGameMinPlayers(item, data);\r\n        this.getGameYear(item, data);\r\n        this.getPlayingTime(item, data);\r\n      },\r\n      error: (err) => {\r\n        console.error(err);\r\n      }\r\n    });\r\n  }\r\n\r\n  public getSanitizedUrl(url: string) {\r\n    return this.sanitizer.bypassSecurityTrustUrl(url);\r\n  }\r\n\r\n  getGames() {\r\n    this.loading = true;\r\n    this.getGamesfromGoogle().subscribe({\r\n      next: (res) => {\r\n        this.loading = false;\r\n        let position = -1;\r\n        for (let i = 0; i < res.length; i++) {\r\n          if (res[i][0]) {\r\n            position = this.games.push(new Game(res[i][0], res[i][1], res[i][2], res[i][3]))\r\n            let lastItem = this.games[position - 1];\r\n            this.getGameData(lastItem);\r\n          }\r\n        }\r\n      },\r\n      error: (err) => {\r\n        console.error(err);\r\n      }\r\n    });\r\n  }\r\n\r\n  getItemDataFromBgg(id: string): Observable<any> {\r\n    return this.http.get('https://volkan-gamelist.herokuapp.com/bggGames/' + id, { responseType: 'text' });\r\n  }\r\n\r\n  getGamesfromGoogle(): Observable<any> {\r\n    return this.http.get('https://volkan-gamelist.herokuapp.com/games/1/50');\r\n  }\r\n\r\n}\r\n","<div class=\"content\">\r\n  <mat-spinner *ngIf=\"loading\"></mat-spinner>\r\n  <div fxLayout=\"row wrap\">\r\n    <mat-card *ngFor=\"let game of games\" fxFlex=\"25%\">\r\n      <mat-card-header>\r\n        <mat-card-title>\r\n          {{game.name}}\r\n        </mat-card-title>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <center><img [src]=\"getSanitizedUrl(game.thumbnail)\">\r\n        </center>\r\n        <mat-list dense>\r\n          <mat-list-item> <b>Anno:</b> {{game.year}} </mat-list-item>\r\n          <mat-list-item> <b>Numero di giocatori:</b> {{game.minPlayers}} - {{game.maxPlayers}}</mat-list-item>\r\n          <mat-list-item> <b>Durata partita:</b> {{game.playingTime}} </mat-list-item>\r\n        </mat-list>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>","export class Game {\r\n  name: string = '';\r\n  owner: string = '';\r\n  notes: string = '';\r\n  bggId: string = '';\r\n  thumbnail: string = '';\r\n  genre: string = '';\r\n  author: string = '';\r\n  year: string = '';\r\n  minPlayers: string = '';\r\n  maxPlayers: string = '';\r\n  playingTime: number = -1;\r\n\r\n  constructor(name: string, owner: string, notes: string, bggId: string) {\r\n    this.name = name;\r\n    this.owner = owner;\r\n    this.notes = notes;\r\n    this.bggId = bggId;\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":["Game","i0","HomeComponent","constructor","http","sanitizer","ngOnInit","getGames","getGameThumbnail","item","obj","bggId","thumbnail","console","log","items","getGameMinPlayers","minPlayers","minplayers","$","value","getGameMaxPlayers","maxPlayers","maxplayers","getGameAuthor","getGameYear","year","yearpublished","getPlayingTime","playingTime","playingtime","getGameData","undefined","getItemDataFromBgg","subscribe","next","res","data","JSON","parse","error","err","getSanitizedUrl","url","bypassSecurityTrustUrl","loading","getGamesfromGoogle","position","i","length","games","push","lastItem","id","get","responseType","selectors","decls","vars","consts","template"],"sourceRoot":"webpack:///"}